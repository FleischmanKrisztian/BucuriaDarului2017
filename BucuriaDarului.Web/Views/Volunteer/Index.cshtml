@model BucuriaDarului.Contexts.VolunteerContexts.VolunteerMainDisplayIndexResponse
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@{
    ViewBag.Title = Localizer["Volunteers"];
}

<head>
    <link rel="stylesheet" href="~/css/style.css" type="text/css" />
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous" />
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>

    <style>
        .dropdown-menu {
            width: 500px !important;
        }

        .modal-dialog {
            width: 600px;
            height: 1000px !important;
        }

        .modal-content {
            /* 80% of window height */

            height: 80%;
        }

        .modal-header {
            background-color: dodgerblue;
            padding: 16px 16px;
            color: white;
            border-bottom: 2px dashed #337AB7;
        }

        .modal-footer {
            width: 100%;
            height: 100px;
            position: absolute;
            bottom: 0;
            left: 0;
        }
        
        .i-circle {
            background: #ff0000;
            color: #fff;
            padding-right: 5px;
            font-size: 15px;
        }
    </style>
</head>

<div class="container" style="max-width: 1300px; min-width: 1300px; width: auto;">
    <h2>@Localizer["Volunteers"] <small> (@Model.TotalVolunteers)</small> </h2>
    @if (ViewBag.wrongorder == true)
    {
        <h3 style="color:red">@Localizer["TheDateOfActiveCant"]</h3>
    }
    @using (Html.BeginForm("Index", "Volunteer", FormMethod.Get))
    {
        <div>
            <a href=@Url.Action("Create")> <img src="~/Resources/vol.jpg" width="40" height="40" title="@Localizer["CreateNew"]"> </a>
            @if (Model.TotalVolunteers != 0)
            {
                <a href=@Url.Action("CSVExporter", new { dictionaryKey = Model.DictionaryKey })> <img src="~/Resources/csv.png" width="40" height="40" title=" @Localizer["ExportToCsv"] "> </a>
            }
            <a href=@Url.Action("Import")> <img src="~/Resources/import-csv.png" width="40" height="40" title=" @Localizer["UploadFromCsv"]"> </a>
            <br>
        </div>
        <p>
            <div class="pagination">
                <pre style="white-space:pre-wrap;">
            @{
                var maxPage = (Model.TotalVolunteers/ Model.PagingData.NrOfDocumentsPerPage) + 1;
                if (Model.TotalVolunteers % Model.PagingData.NrOfDocumentsPerPage == 0 && Model.TotalVolunteers != 0)
                {
                    maxPage--;
                }

                if (Model.PagingData.CurrentPage == 1)
                {
                    @Html.ActionLink("1", "Index", new { page = 1, searchedFullname = Model.FilterData.SearchedFullname, sortOrder = Model.FilterData.SortOrder, active = Model.FilterData.Active, hasCar = Model.FilterData.HasCar, HasDriverLicense = Model.FilterData.HasDrivingLicense, lowerDate = Model.FilterData.LowerDate, upperDate = Model.FilterData.UpperDate, gender = Model.FilterData.Gender, searchedAddress = Model.FilterData.SearchedAddress, searchedWorkplace = Model.FilterData.SearchedWorkplace, searchedOccupation = Model.FilterData.SearchedOccupation, searchedRemarks = Model.FilterData.SearchedRemarks, searchedContact = Model.FilterData.SearchedContact, searchedHourCount = Model.FilterData.SearchedHourCount }, new { Style = "background-color:lightgray;  color:black; border-radius: 5px;" })
                }
                else
                {
                    @Html.ActionLink("1", "Index", new { page = 1, searchedFullname = Model.FilterData.SearchedFullname, sortOrder = Model.FilterData.SortOrder, active = Model.FilterData.Active, hasCar = Model.FilterData.HasCar, HasDriverLicense = Model.FilterData.HasDrivingLicense, lowerDate = Model.FilterData.LowerDate, upperDate = Model.FilterData.UpperDate, gender = Model.FilterData.Gender, searchedAddress = Model.FilterData.SearchedAddress, searchedWorkplace = Model.FilterData.SearchedWorkplace, searchedOccupation = Model.FilterData.SearchedOccupation, searchedRemarks = Model.FilterData.SearchedRemarks, searchedContact = Model.FilterData.SearchedContact, searchedHourCount = Model.FilterData.SearchedHourCount })
                }
                if (Model.PagingData.CurrentPage >= 5)
                {
                    @Html.ActionLink("<<", "Index", new { page = Model.PagingData.CurrentPage - 1, searchedFullname = Model.FilterData.SearchedFullname, sortOrder = Model.FilterData.SortOrder, active = Model.FilterData.Active, hasCar = Model.FilterData.HasCar, HasDriverLicense = Model.FilterData.HasDrivingLicense, lowerDate = Model.FilterData.LowerDate, upperDate = Model.FilterData.UpperDate, gender = Model.FilterData.Gender, searchedAddress = Model.FilterData.SearchedAddress, searchedWorkplace = Model.FilterData.SearchedWorkplace, searchedOccupation = Model.FilterData.SearchedOccupation, searchedRemarks = Model.FilterData.SearchedRemarks, searchedContact = Model.FilterData.SearchedContact, searchedHourCount = Model.FilterData.SearchedHourCount })
                }
                if (Model.PagingData.CurrentPage > 3)
                {
                    @Html.ActionLink((Model.PagingData.CurrentPage - 2).ToString(), "Index", new { page = Model.PagingData.CurrentPage - 2, searchedFullname = Model.FilterData.SearchedFullname, sortOrder = Model.FilterData.SortOrder, active = Model.FilterData.Active, hasCar = Model.FilterData.HasCar, HasDriverLicense = Model.FilterData.HasDrivingLicense, lowerDate = Model.FilterData.LowerDate, upperDate = Model.FilterData.UpperDate, gender = Model.FilterData.Gender, searchedAddress = Model.FilterData.SearchedAddress, searchedWorkplace = Model.FilterData.SearchedWorkplace, searchedOccupation = Model.FilterData.SearchedOccupation, searchedRemarks = Model.FilterData.SearchedRemarks, searchedContact = Model.FilterData.SearchedContact, searchedHourCount = Model.FilterData.SearchedHourCount })
                }
                if (Model.PagingData.CurrentPage > 2)
                {
                    @Html.ActionLink((Model.PagingData.CurrentPage - 1).ToString(), "Index", new { page = Model.PagingData.CurrentPage - 1, searchedFullname = Model.FilterData.SearchedFullname, sortOrder = Model.FilterData.SortOrder, active = Model.FilterData.Active, hasCar = Model.FilterData.HasCar, HasDriverLicense = Model.FilterData.HasDrivingLicense, lowerDate = Model.FilterData.LowerDate, upperDate = Model.FilterData.UpperDate, gender = Model.FilterData.Gender, searchedAddress = Model.FilterData.SearchedAddress, searchedWorkplace = Model.FilterData.SearchedWorkplace, searchedOccupation = Model.FilterData.SearchedOccupation, searchedRemarks = Model.FilterData.SearchedRemarks, searchedContact = Model.FilterData.SearchedContact, searchedHourCount = Model.FilterData.SearchedHourCount })
                }
                if (Model.PagingData.CurrentPage != 1 && Model.PagingData.CurrentPage != maxPage)
                {
                    @Html.ActionLink(Model.PagingData.CurrentPage.ToString(), "Index", new { page = Model.PagingData.CurrentPage, searchedFullname = Model.FilterData.SearchedFullname, sortOrder = Model.FilterData.SortOrder, active = Model.FilterData.Active, hasCar = Model.FilterData.HasCar, HasDriverLicense = Model.FilterData.HasDrivingLicense, lowerDate = Model.FilterData.LowerDate, upperDate = Model.FilterData.UpperDate, gender = Model.FilterData.Gender, searchedAddress = Model.FilterData.SearchedAddress, searchedWorkplace = Model.FilterData.SearchedWorkplace, searchedOccupation = Model.FilterData.SearchedOccupation, searchedRemarks = Model.FilterData.SearchedRemarks, searchedContact = Model.FilterData.SearchedContact, searchedHourCount = Model.FilterData.SearchedHourCount }, new { Style = "background-color:lightgray;  color:black; border-radius: 5px;" })
                }
                if (Model.PagingData.CurrentPage < maxPage - 1)
                {
                    @Html.ActionLink((Model.PagingData.CurrentPage + 1).ToString(), "Index", new { page = Model.PagingData.CurrentPage + 1, searchedFullname = Model.FilterData.SearchedFullname, sortOrder = Model.FilterData.SortOrder, active = Model.FilterData.Active, hasCar = Model.FilterData.HasCar, HasDriverLicense = Model.FilterData.HasDrivingLicense, lowerDate = Model.FilterData.LowerDate, upperDate = Model.FilterData.UpperDate, gender = Model.FilterData.Gender, searchedAddress = Model.FilterData.SearchedAddress, searchedWorkplace = Model.FilterData.SearchedWorkplace, searchedOccupation = Model.FilterData.SearchedOccupation, searchedRemarks = Model.FilterData.SearchedRemarks, searchedContact = Model.FilterData.SearchedContact, searchedHourCount = Model.FilterData.SearchedHourCount })
                }
                if (Model.PagingData.CurrentPage < maxPage - 2)
                {
                    @Html.ActionLink((Model.PagingData.CurrentPage + 2).ToString(), "Index", new { page = Model.PagingData.CurrentPage + 2, searchedFullname = Model.FilterData.SearchedFullname, sortOrder = Model.FilterData.SortOrder, active = Model.FilterData.Active, hasCar = Model.FilterData.HasCar, HasDriverLicense = Model.FilterData.HasDrivingLicense, lowerDate = Model.FilterData.LowerDate, upperDate = Model.FilterData.UpperDate, gender = Model.FilterData.Gender, searchedAddress = Model.FilterData.SearchedAddress, searchedWorkplace = Model.FilterData.SearchedWorkplace, searchedOccupation = Model.FilterData.SearchedOccupation, searchedRemarks = Model.FilterData.SearchedRemarks, searchedContact = Model.FilterData.SearchedContact, searchedHourCount = Model.FilterData.SearchedHourCount })
                }
                if (Model.PagingData.CurrentPage < maxPage - 3)
                {
                    @Html.ActionLink(">>", "Index", new { page = Model.PagingData.CurrentPage + 1, searchedFullname = Model.FilterData.SearchedFullname, sortOrder = Model.FilterData.SortOrder, active = Model.FilterData.Active, hasCar = Model.FilterData.HasCar, HasDriverLicense = Model.FilterData.HasDrivingLicense, lowerDate = Model.FilterData.LowerDate, upperDate = Model.FilterData.UpperDate, gender = Model.FilterData.Gender, searchedAddress = Model.FilterData.SearchedAddress, searchedWorkplace = Model.FilterData.SearchedWorkplace, searchedOccupation = Model.FilterData.SearchedOccupation, searchedRemarks = Model.FilterData.SearchedRemarks, searchedContact = Model.FilterData.SearchedContact, searchedHourCount = Model.FilterData.SearchedHourCount })
                }
                if (maxPage != 1 && Model.PagingData.CurrentPage == maxPage)
                {
                    @Html.ActionLink(maxPage.ToString(), "Index", new { page = maxPage, searchedFullname = Model.FilterData.SearchedFullname, sortOrder = Model.FilterData.SortOrder, active = Model.FilterData.Active, hasCar = Model.FilterData.HasCar, HasDriverLicense = Model.FilterData.HasDrivingLicense, lowerDate = Model.FilterData.LowerDate, upperDate = Model.FilterData.UpperDate, gender = Model.FilterData.Gender, searchedAddress = Model.FilterData.SearchedAddress, searchedWorkplace = Model.FilterData.SearchedWorkplace, searchedOccupation = Model.FilterData.SearchedOccupation, searchedRemarks = Model.FilterData.SearchedRemarks, searchedContact = Model.FilterData.SearchedContact, searchedHourCount = Model.FilterData.SearchedHourCount }, new { Style = "background-color:lightgray;  color:black; border-radius: 5px;" })
                }
                else if (maxPage != 1)
                {
                    @Html.ActionLink(maxPage.ToString(), "Index", new { page = maxPage, searchedFullname = Model.FilterData.SearchedFullname, sortOrder = Model.FilterData.SortOrder, active = Model.FilterData.Active, hasCar = Model.FilterData.HasCar, HasDriverLicense = Model.FilterData.HasDrivingLicense, lowerDate = Model.FilterData.LowerDate, upperDate = Model.FilterData.UpperDate, gender = Model.FilterData.Gender, searchedAddress = Model.FilterData.SearchedAddress, searchedWorkplace = Model.FilterData.SearchedWorkplace, searchedOccupation = Model.FilterData.SearchedOccupation, searchedRemarks = Model.FilterData.SearchedRemarks, searchedContact = Model.FilterData.SearchedContact, searchedHourCount = Model.FilterData.SearchedHourCount })
                }
            }
       </pre>
            </div>
        </p>

        <a href=@Url.Action("Index") class="btn btn-primary">@Localizer["ShowAllVolunteers"] </a>
        <br />
        <br />

        @if (Model.FilterData.HasDrivingLicense)
        {
            <div class="badge badge-primary text-wrap" style="width: 10rem; background-color:lightgrey; color:black ">
                @Localizer["HasDrivingLicense"]
            </div>
        }
        @if (Model.FilterData.SearchedFullname != null)
        {<div class="badge badge-primary text-wrap" style="width: 10rem; background-color:lightgrey; color:black ">
                @Localizer["Fullname"]
                : @Model.FilterData.SearchedFullname
            </div>
        }
        @if (Model.FilterData.SearchedContact != null)
        {<div class="badge badge-primary text-wrap" style="width: 10rem; background-color:lightgrey; color:black ">
                @Localizer["ContactInfo"] : @Model.FilterData.SearchedContact
            </div>
        }
        @if (Model.FilterData.Gender != null)
        {<div class="badge badge-primary text-wrap" style="width: 10rem; background-color:lightgrey; color:black ">
                @Localizer["Gender"] : @Model.FilterData.Gender
            </div>
        }
        @if (Model.FilterData.SearchedAddress != null)
        {<div class="badge badge-primary text-wrap" style="width: 10rem; background-color:lightgrey; color:black ">
                @Localizer["Address"] : @Model.FilterData.SearchedAddress
            </div>
        }
        @if (Model.FilterData.SearchedWorkplace != null)
        {<div class="badge badge-primary text-wrap" style="width: 10rem; background-color:lightgrey; color:black ">
                @Localizer["DesiredArea"] : @Model.FilterData.SearchedWorkplace
            </div>
        }

        @if (Model.FilterData.SearchedRemarks != null)
        {<div class="badge badge-primary text-wrap" style="width: 10rem; background-color:lightgrey; color:black ">
                @Localizer["Remarks"] : @Model.FilterData.SearchedRemarks
            </div>
        }

        @if (Model.FilterData.SearchedOccupation != null)
        {<div class="badge badge-primary text-wrap" style="width: 10rem; background-color:lightgrey; color:black ">
                @Localizer["Occupation"] : @Model.FilterData.SearchedOccupation
            </div>
        }@if (Model.FilterData.SearchedHourCount != 0)
        {<div class="badge badge-primary text-wrap" style="width: 10rem; background-color:lightgrey; color:black ">
                @Localizer["HourCount"] : @Model.FilterData.SearchedHourCount
            </div>
        }@if (Model.FilterData.Active)
        {<div class="badge badge-primary text-wrap" style="width: 10rem; background-color:lightgrey; color:black ">
                @Localizer["Active"]
            </div>
        }@if (Model.FilterData.HasCar)
        {<div class="badge badge-primary text-wrap" style="width: 10rem; background-color:lightgrey; color:black ">
                @Localizer["HasCar"]
            </div>
        }
        @if (Model.FilterData.LowerDate.Year > DateTime.MinValue.Year)
        {<div class="badge badge-primary text-wrap" style="width: 10rem; background-color:lightgrey; color:black ">
                @Localizer["BornAfter"] : @Model.FilterData.LowerDate
            </div>
        }
        @if (Model.FilterData.UpperDate.Year > DateTime.MinValue.Year)
        {<div class="badge badge-primary text-wrap" style="width: 10rem; background-color:lightgrey; color:black ">
                @Localizer["BornBefore"] : @Model.FilterData.UpperDate
            </div>
        }

        <table class="table" style="text-align: center">
            <tr>
                <th>
                    <a href=@Url.Action("Index", new { sortOrder =  Model.FilterData.SortOrder.FullnameSort, searchedFullname = Model.FilterData.SearchedFullname, hasDrivingLicence = Model.FilterData.HasDrivingLicense, hasCar = Model.FilterData.HasCar, active = Model.FilterData.Active, lowerDate = Model.FilterData.LowerDate, upperDate =Model.FilterData.UpperDate,  gender =Model.FilterData.Gender, searchedAddress = Model.FilterData.SearchedAddress, searchedWorkplace =Model.FilterData.SearchedWorkplace, searchedOccupation = Model.FilterData.SearchedOccupation, searchedRemarks = Model.FilterData.SearchedRemarks, searchedContact = Model.FilterData.SearchedContact, searchedHourCount = Model.FilterData.SearchedHourCount })>@Localizer["Fullname"] </a>
                    <br/>
                    @Html.TextBox("searchedFullname")
                </th>
                <th>
                    <a href=@Url.Action("Index", new { sortOrder = Model.FilterData.SortOrder.DateSortParam,  searchedFullname = Model.FilterData.SearchedFullname, hasDrivingLicence = Model.FilterData.HasDrivingLicense, hasCar = Model.FilterData.HasCar, active = Model.FilterData.Active, lowerDate = Model.FilterData.LowerDate, upperDate =Model.FilterData.UpperDate,  gender =Model.FilterData.Gender, searchedAddress = Model.FilterData.SearchedAddress, searchedWorkplace =Model.FilterData.SearchedWorkplace, searchedOccupation = Model.FilterData.SearchedOccupation, searchedRemarks = Model.FilterData.SearchedRemarks, searchedContact = Model.FilterData.SearchedContact, searchedHourCount = Model.FilterData.SearchedHourCount  })>@Localizer["BirthDate"] </a>
                </th>
                <th>
                    <a href=@Url.Action("Index", new { sortOrder = Model.FilterData.SortOrder.ActiveSort,  searchedFullname = Model.FilterData.SearchedFullname, hasDrivingLicence = Model.FilterData.HasDrivingLicense, hasCar = Model.FilterData.HasCar, active = Model.FilterData.Active, lowerDate = Model.FilterData.LowerDate, upperDate =Model.FilterData.UpperDate,  gender =Model.FilterData.Gender, searchedAddress = Model.FilterData.SearchedAddress, searchedWorkplace =Model.FilterData.SearchedWorkplace, searchedOccupation = Model.FilterData.SearchedOccupation, searchedRemarks = Model.FilterData.SearchedRemarks, searchedContact = Model.FilterData.SearchedContact, searchedHourCount = Model.FilterData.SearchedHourCount  })>@Localizer["Active"] </a>
                    <br/>
                    @Html.CheckBox("Active")
                </th>
                <th>
                    @Localizer["PhoneNumber"]
                </th>
                <th>
                    <a href=@Url.Action("Index", new { sortOrder = Model.FilterData.SortOrder.GenderSort,  searchedFullname = Model.FilterData.SearchedFullname, hasDrivingLicence = Model.FilterData.HasDrivingLicense, hasCar = Model.FilterData.HasCar, active = Model.FilterData.Active, lowerDate = Model.FilterData.LowerDate, upperDate =Model.FilterData.UpperDate,  gender =Model.FilterData.Gender, searchedAddress = Model.FilterData.SearchedAddress, searchedWorkplace =Model.FilterData.SearchedWorkplace, searchedOccupation = Model.FilterData.SearchedOccupation, searchedRemarks = Model.FilterData.SearchedRemarks, searchedContact = Model.FilterData.SearchedContact, searchedHourCount = Model.FilterData.SearchedHourCount  })>@Localizer["Gender"] </a>
                </th>
                <th>
                    <a href=@Url.Action("Index", new { sortOrder = Model.FilterData.SortOrder.HourCountSort, searchedFullname =Model.FilterData.SearchedFullname, hasDrivingLicence = Model.FilterData.HasDrivingLicense, hasCar = Model.FilterData.HasCar, active = Model.FilterData.Active, lowerDate = Model.FilterData.LowerDate, upperDate =Model.FilterData.UpperDate,  gender =Model.FilterData.Gender, searchedAddress = Model.FilterData.SearchedAddress, searchedWorkplace =Model.FilterData.SearchedWorkplace, searchedOccupation = Model.FilterData.SearchedOccupation, searchedRemarks = Model.FilterData.SearchedRemarks, searchedContact = Model.FilterData.SearchedContact, searchedHourCount = Model.FilterData.SearchedHourCount  })>@Localizer["HourCount"] </a>
                    <br/>
                    @Html.TextBox("searchedHourCount", "", new { @style = " width:70px; " })
                </th>
                <th>

                    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModal">@Localizer["Filters"]</button>
                    <input type="submit"  value=@Localizer["Search"] class="btn btn-primary" />

                    <form method="post" asp-action="Index" asp-controller="Home">
                        <div id="exampleModal" class="modal" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
                            <div class="modal-dialog  modal-lg " role="document">
                                <div class="modal-content" sstyle="max-height: 90vh;">

                                    <div class="modal-header">
                                        <h5 class="modal-title">@Localizer["Filters"]:</h5>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <br />
                                    <div class="modal-body">
                                        <div class="form-group">
                                            <dt class="col-sm-6">@Localizer["HasCar"] </dt>
                                            <dd class="col-sm-2">
                                                @Html.CheckBox("hasCar")
                                            </dd>
                                            <dt class="col-sm-6">@Localizer["HasDrivingLicense"] </dt>
                                            <dd class="col-sm-2">
                                                @Html.CheckBox("hasDrivingLicense")
                                            </dd>
                                            <dt class="col-sm-6">@Localizer["BornAfter"] :</dt>
                                            <dd class="col-sm-2">
                                                <input type="date" name="lowerdate">
                                            </dd>
                                            <dt class="col-sm-6">@Localizer["BornBefore"] :</dt>
                                            <dd class="col-sm-3">
                                                <input type="date" name="upperdate">
                                            </dd>
                                            <dt class="col-sm-6">@Localizer["Gender"] :</dt>
                                            <dd class="col-sm-6">
                                                <input type="radio" name="gender" value="All" checked="checked" />@Localizer["All"]
                                                <input type="radio" name="gender" value="Male" />@Localizer["Male"]
                                                <input type="radio" name="gender" value="Female" />@Localizer["Female"]
                                            </dd>
                                            <dt class="col-sm-6">@Localizer["Address"] :</dt>
                                            <dd class="col-sm-2">
                                                @Html.TextBox("searchedAddress")
                                            </dd>
                                            <dt class="col-sm-6">@Localizer["DesiredArea"] :</dt>
                                            <dd class="col-sm-2">
                                                @Html.TextBox("searchedWorkplace")
                                            </dd>
                                            <dt class="col-sm-6">@Localizer["Occupation"] :</dt>
                                            <dd class="col-sm-2">
                                                @Html.TextBox("searchedOccupation")
                                            </dd>
                                            <dt class="col-sm-6">@Localizer["Remarks"] :</dt>
                                            <dd class="col-sm-2">
                                                @Html.TextBox("searchedRemarks")
                                            </dd>
                                            <dt class="col-sm-6">@Localizer["ContactInfo"] :</dt>
                                            <dd class="col-sm-2">
                                                @Html.TextBox("searchedContact")
                                            </dd>
                                        </div>
                                        <hr />
                                        <div class="modal-footer">
                                            <button type="submit" class="btn btn-primary">@Localizer["Search"]</button>
                                            <button type="button" class="btn btn-secondary" data-dismiss="modal">@Localizer["Close"]</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                </th>

                <th></th>
            </tr>

            @if (Model.EmptyDatabase)
            {
                <tr>
                    <td colspan="3 " style="color:red">
                        @Localizer["EmptyDatabase"]
                    </td>
                </tr>
            }
            else if (Model.TotalVolunteers == 0)
            {
                <tr>
                    <td colspan="3 " style="color:red">
                        @Localizer["NoDocumentsMatchingCriteria"]
                    </td>
                </tr>
            }
            else
            {
                foreach (var item in Model.Volunteers)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Fullname)
                        </td>
                        <td>
                            @item.Birthdate.ToShortDateString()
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.InActivity)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ContactInformation.PhoneNumber)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Gender)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.HourCount)
                        </td>
                        <td>
                            <a href=@Url.Action("Edit", new { id = item.Id })> <img src="~/Resources/edit.jpg" width="40" height="40" title=" @Localizer["Edit"]"> </a> |
                            <a href=@Url.Action("Details", new { id = item.Id })> <img src="~/Resources/detali.jpg" width="40" height="40" title="@Localizer["Details"]"> </a> |
                            <a href=@Url.Action("Delete", new { id = item.Id })> <img src="~/Resources/delete.jpg" width="40" height="40" title=" @Localizer["Delete"]"> </a>
                            <a href=@Url.Action("Contracts", new { id = item.Id })> <img src="~/Resources/contract.jpg" width="40" height="40" title="@Localizer["Contracts"]"><span class="i-circle"> @Model.VolunteerNumberOfContracts[item.Id]</span> </a>
                        </td>
                    </tr>
                }
            }
        </table>
    }
</div>

