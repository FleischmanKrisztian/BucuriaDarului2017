@model BucuriaDarului.Contexts.SponsorContexts.SponsorsMainDisplayIndexResponse
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@{
    ViewBag.Title = Localizer["Sponsors"];
}
<head>
    <style>

        .pagination {
            display: inline-block;
            width: 800px;
        }

        .dropdown-menu {
            width: 500px !important;
        }

        .pagination a {
            color: black;
            float: left;
            padding: 8px 16px;
            text-decoration: none;
            border-radius: 5px;
            border: 1px solid #ddd; /* Gray */
            transition: background-color .3s;
        }

            .pagination a.active {
                background-color: red;
                color: red;
                border-radius: 5px;
            }

            .pagination a:hover:not(.active) {
                background-color: #ddd;
            }

            .pagination a:first-child {
                border-top-left-radius: 5px;
                border-bottom-left-radius: 5px;
            }

            .pagination a:last-child {
                border-top-right-radius: 5px;
                border-bottom-right-radius: 5px;
            }

        .scrollable-menu {
            height: auto;
            max-height: 200px;
            overflow-x: hidden;
        }
    </style>
</head>
<h2>@Localizer["Sponsors"] <small> (@Model.TotalSponsors)</small></h2>
<hr />
@if (ViewBag.wrongorder == true)
{
    <h3 style="color:red">@Localizer["The date of active till cant be smaller that that of activesince!"]</h3>
}
@using (Html.BeginForm("Index", "Sponsor", FormMethod.Get))
{

    <a href=@Url.Action( "Create")><img src="~/Resources/new_sponsor.png" width="40" height="40" title=@Localizer["CreateNew"]></a>
    <a href=@Url.Action("CSVExporter", new { stringOfIDs = Model.StringOfIDs })><img src="~/Resources/csv.png" width="40" height="40" title=@Localizer["ExportToCsv"]></a>
    <a href=@Url.Action( "Import")><img src="~/Resources/import-csv.png" width="40" height="40" title=@Localizer["UploadFromCsv"]></a>

    <p>
        <div class="pagination">
            <pre style="white-space:pre-wrap;">
            @{
                int maxpage = (Model.TotalSponsors / Model.PagingData.NrOfDocumentsPerPage) + 1;
                if (Model.TotalSponsors % Model.PagingData.NrOfDocumentsPerPage == 0 && Model.TotalSponsors != 0)
                {
                    maxpage--;
                }

                if(Model.PagingData.CurrentPage == 1)
                {
                    @Html.ActionLink("1", "Index", new { page = 1, sponsorName = Model.FilterData.NameOfSponsor,  ContactInfo= Model.FilterData.ContactInfo,  lowerdate= Model.FilterData.LowerDate , upperdate = Model.FilterData.UpperDate, HasContract = Model.FilterData.HasContract ,   WhatGoods = Model.FilterData.WhatGoods,  GoodsAmount = Model.FilterData.GoodsAmount ,   MoneyAmount = Model.FilterData.MoneyAmount }, new { Style = "background-color:lightgray;  color:black; border-radius: 5px;" })
                }
                else
                {
                    @Html.ActionLink("1", "Index", new { page = 1, sponsorName = Model.FilterData.NameOfSponsor, ContactInfo = Model.FilterData.ContactInfo , lowerdate = Model.FilterData.LowerDate, upperdate = Model.FilterData.UpperDate, HasContract = Model.FilterData.HasContract, WhatGoods = Model.FilterData.WhatGoods , GoodsAmount = Model.FilterData.GoodsAmount, MoneyAmount = Model.FilterData.MoneyAmount })
                }
                if(Model.PagingData.CurrentPage >= 5)
                {
                    @Html.ActionLink("<<", "Index", new { page = Model.PagingData.CurrentPage - 1, sponsorName = Model.FilterData.NameOfSponsor, ContactInfo = Model.FilterData.ContactInfo, lowerdate = Model.FilterData.LowerDate, upperdate = Model.FilterData.UpperDate, HasContract = Model.FilterData.HasContract , WhatGoods = Model.FilterData.WhatGoods , GoodsAmount = Model.FilterData.GoodsAmount, MoneyAmount = Model.FilterData.MoneyAmount })
                }
                if(Model.PagingData.CurrentPage > 3)
                {
                    @Html.ActionLink((Model.PagingData.CurrentPage - 2).ToString(), "Index", new { page = Model.PagingData.CurrentPage - 2, sponsorName = Model.FilterData.NameOfSponsor, ContactInfo = Model.FilterData.ContactInfo , lowerdate = Model.FilterData.LowerDate, upperdate = Model.FilterData.UpperDate, HasContract = Model.FilterData.HasContract, WhatGoods = Model.FilterData.WhatGoods , GoodsAmount = Model.FilterData.GoodsAmount, MoneyAmount = Model.FilterData.MoneyAmount })
                }
                if(Model.PagingData.CurrentPage > 2)
                {
                    @Html.ActionLink((Model.PagingData.CurrentPage - 1).ToString(), "Index", new { page = Model.PagingData.CurrentPage - 1, sponsorName = Model.FilterData.NameOfSponsor, ContactInfo = Model.FilterData.ContactInfo, lowerdate = Model.FilterData.LowerDate, upperdate = Model.FilterData.UpperDate, HasContract = Model.FilterData.HasContract, WhatGoods = Model.FilterData.WhatGoods, GoodsAmount = Model.FilterData.GoodsAmount, MoneyAmount = Model.FilterData.MoneyAmount })
                }
                if(Model.PagingData.CurrentPage != 1 && Model.PagingData.CurrentPage != maxpage)
                {
                    @Html.ActionLink(Model.PagingData.CurrentPage.ToString(), "Index", new { page = Model.PagingData.CurrentPage, sponsorName = Model.FilterData.NameOfSponsor, ContactInfo = Model.FilterData.ContactInfo , lowerdate = Model.FilterData.LowerDate, upperdate = Model.FilterData.UpperDate, HasContract = Model.FilterData.HasContract , WhatGoods = Model.FilterData.WhatGoods, GoodsAmount = Model.FilterData.GoodsAmount, MoneyAmount = Model.FilterData.MoneyAmount }, new { Style = "background-color:lightgray;  color:black; border-radius: 5px;" })
                }
                if(Model.PagingData.CurrentPage < maxpage-1)
                {
                    @Html.ActionLink((Model.PagingData.CurrentPage + 1).ToString(), "Index", new { page = Model.PagingData.CurrentPage + 1, sponsorName = Model.FilterData.NameOfSponsor, ContactInfo = Model.FilterData.ContactInfo, lowerdate = Model.FilterData.LowerDate, upperdate = Model.FilterData.UpperDate, HasContract = Model.FilterData.HasContract, WhatGoods = Model.FilterData.WhatGoods , GoodsAmount = Model.FilterData.GoodsAmount, MoneyAmount = Model.FilterData.MoneyAmount })
                }
                if(Model.PagingData.CurrentPage < maxpage-2)
                {
                    @Html.ActionLink((Model.PagingData.CurrentPage + 2).ToString(), "Index", new { page = Model.PagingData.CurrentPage + 2, sponsorName = Model.FilterData.NameOfSponsor, ContactInfo = Model.FilterData.ContactInfo , lowerdate = Model.FilterData.LowerDate, upperdate = Model.FilterData.UpperDate, HasContract = Model.FilterData.HasContract , WhatGoods = Model.FilterData.WhatGoods, GoodsAmount = Model.FilterData.GoodsAmount, MoneyAmount = Model.FilterData.MoneyAmount })
                }
                if(Model.PagingData.CurrentPage < maxpage-3)
                {
                    @Html.ActionLink(">>", "Index", new { page = Model.PagingData.CurrentPage + 1, sponsorName = Model.FilterData.NameOfSponsor, ContactInfo = Model.FilterData.ContactInfo, lowerdate = Model.FilterData.LowerDate, upperdate = Model.FilterData.UpperDate, HasContract = Model.FilterData.HasContract , WhatGoods = Model.FilterData.WhatGoods , GoodsAmount = Model.FilterData.GoodsAmount, MoneyAmount = Model.FilterData.MoneyAmount })
                }
                if(maxpage!=1 && Model.PagingData.CurrentPage == maxpage)
                {
                    @Html.ActionLink(maxpage.ToString(), "Index", new { page = maxpage, sponsorName = Model.FilterData.NameOfSponsor, ContactInfo = Model.FilterData.ContactInfo , lowerdate = Model.FilterData.LowerDate, upperdate = Model.FilterData.UpperDate, HasContract = Model.FilterData.HasContract , WhatGoods = Model.FilterData.WhatGoods , GoodsAmount = Model.FilterData.GoodsAmount, MoneyAmount = Model.FilterData.MoneyAmount }, new { Style = "background-color:lightgray;  color:black; border-radius: 5px;" })
                }
                else if (maxpage != 1)
                {
                    @Html.ActionLink(maxpage.ToString(), "Index", new { page = maxpage, sponsorName = Model.FilterData.NameOfSponsor, ContactInfo = Model.FilterData.ContactInfo , lowerdate = Model.FilterData.LowerDate, upperdate = Model.FilterData.UpperDate, HasContract = Model.FilterData.HasContract, WhatGoods = Model.FilterData.WhatGoods , GoodsAmount = Model.FilterData.GoodsAmount, MoneyAmount = Model.FilterData.MoneyAmount })
                }
            }
            </pre>
        </div>
    </p>
}
@using (Html.BeginForm("Index", "Sponsor", FormMethod.Get))
{<a href=@Url.Action( "Index" ) class="btn btn-primary">@Localizer["Show all sponsors"]</a>
<br />
@if (Model.FilterData.NameOfSponsor != null)
{
    <div class="badge badge-primary text-wrap" style="width: 10rem; background-color:lightgrey; color:black ">
        @Localizer["NameOfSponsor"]:@Model.FilterData.NameOfSponsor
    </div>
}
@if (Model.FilterData.ContactInfo != null)
{<div class="badge badge-primary text-wrap" style="width: 10rem; background-color:lightgrey; color:black ">
    @Localizer["ContactInfo"]:@Model.FilterData.ContactInfo
</div>
}
@if (Model.FilterData.HasContract != null)
{<div class="badge badge-primary text-wrap" style="width: 10rem; background-color:lightgrey; color:black ">
    @Localizer["HasContract"]:@Model.FilterData.HasContract
</div>
}
@if (Model.FilterData.WhatGoods != null)
{<div class="badge badge-primary text-wrap" style="width: 10rem; background-color:lightgrey; color:black ">
    @Localizer["WhatGoods"]:@Model.FilterData.WhatGoods
</div>
}
@if (Model.FilterData.MoneyAmount != null)
{<div class="badge badge-primary text-wrap" style="width: 10rem; background-color:lightgrey; color:black ">
    @Localizer["MoneyAmount"]:@Model.FilterData.MoneyAmount
</div>
}
@if (Model.FilterData.GoodsAmount != null)
{<div class="badge badge-primary text-wrap" style="width: 10rem; background-color:lightgrey; color:black ">
    @Localizer["GoodsAmount"]:@Model.FilterData.GoodsAmount
</div>
}
@if (Model.FilterData.LowerDate != null)
{<div class="badge badge-primary text-wrap" style="width: 10rem; background-color:lightgrey; color:black ">
    @Localizer["LowerDate"]:@Model.FilterData.LowerDate
</div>
}

@if (Model.FilterData.UpperDate != null)
{<div class="badge badge-primary text-wrap" style="width: 10rem; background-color:lightgrey; color:black ">
    @Localizer["UpperDate"]:@Model.FilterData.UpperDate
</div>
}
<table class="table" style="text-align:top">
    <tr>
        <th>
            @Localizer["NameOfSponsor"]
            @Html.TextBox("sponsorName")
        </th>
        <th>
            @Localizer["PhoneNumber"]
        </th>
        <th>
            @Localizer["EmailAddress"]
        </th>
        <th>
            <div class="dropdown">
                <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    @Localizer["Filters"]:
                </button>
                <div class="dropdown-menu scrollable-menu" aria-labelledby="dropdownMenuButton" style="width: 200px;overflow: scroll;">
                    <dt class="col-sm-6">@Localizer["ContactInfo"]:</dt>
                    <dd class="col-sm-2">
                        @Html.TextBox("ContactInfo")
                    </dd>
                    <dt class="col-sm-6">@Localizer["LowerDate"]: </dt>
                    <dd class="col-sm-2">
                        <input type="date" name="lowerdate">
                    </dd>
                    <dt class="col-sm-6">@Localizer["UpperDate"]: </dt>
                    <dd class="col-sm-2">
                        <input type="date" name="upperdate">
                    </dd>
                    <dt class="col-sm-6">@Localizer["HasContract"]: </dt>
                    <dd class="col-sm-2">
                        @Html.CheckBox("HasContract")
                    </dd>
                    <dt class="col-sm-6">@Localizer["WhatGoods"]:</dt>
                    <dd class="col-sm-2">
                        @Html.TextBox("WhatGoods")
                    </dd>
                    <dt class="col-sm-7">@Localizer["GoodsAmount"]: </dt>
                    <dd class="col-sm-2">
                        @Html.TextBox("GoodsAmounts")
                    </dd>
                    <dt class="col-sm-6">@Localizer["MoneyAmount"]: </dt>
                    <dd class="col-sm-2">
                        @Html.TextBox("MoneyAmount")
                    </dd>
                </div>
                <button type="submit" class="btn btn-primary">
                    <span class="glyphicon glyphicon-search" aria-hidden="true"></span> @Localizer["Search"]
                </button>
                <dd></dd>
            </div>
        </th>
        <th></th>
    </tr>

    @if (Model.TotalSponsors == 0)
    {
        <tr>
            <td colspan="3 " style="color:red">
                @Localizer["Message"]
            </td>
        </tr>
    }
    else
    {
        @foreach (var item in Model.Sponsors)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.NameOfSponsor)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ContactInformation.PhoneNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ContactInformation.MailAddress)
                </td>
                <td width="500px;">
                    <a href=@Url.Action("Edit", new { id = item.Id })><img src="~/Resources/edit.jpg" width="40" height="40" title=@Localizer["Edit"]></a> |
                    <a href=@Url.Action("Details", new { id = item.Id })><img src="~/Resources/detali.jpg" width="40" height="40" title=@Localizer["Details"]></a> |
                    <a href=@Url.Action("Delete", new { id = item.Id })><img src="~/Resources/delete.jpg" width="40" height="40" title=@Localizer["Delete"]></a>
                </td>
            </tr>
        }}
</table>
}