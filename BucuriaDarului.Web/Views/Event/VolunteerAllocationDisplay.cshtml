@model BucuriaDarului.Contexts.EventContexts.EventsVolunteerAllocationDisplayResponse
@{
    ViewBag.Title = "VolunteerAllocation";
}
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer

<head>
    <style>

        .pagination {
            display: inline-block;
            width: 800px;
        }

            .pagination a {
                color: black;
                float: left;
                padding: 8px 16px;
                text-decoration: none;
                border-radius: 5px;
                border: 1px solid #ddd; /* Gray */
                transition: background-color .3s;
            }

                .pagination a.active {
                    background-color: red;
                    color: red;
                    border-radius: 5px;
                }

                .pagination a:hover:not(.active) {
                    background-color: #ddd;
                }

                .pagination a:current {
                    background-color: red;
                }

                .pagination a:first-child {
                    border-top-left-radius: 5px;
                    border-bottom-left-radius: 5px;
                }

                .pagination a:last-child {
                    border-top-right-radius: 5px;
                    border-bottom-right-radius: 5px;
                }

        .scrollable-menu {
            height: auto;
            max-height: 200px;
            overflow-x: hidden;
        }
    </style>
</head>
<h2>
    @Localizer["VolunteerAllocationTo"]: @Model.Event.NameOfEvent
</h2>
@using (Html.BeginForm("VolunteerAllocationDisplay", "Event", FormMethod.Get))
{@Html.TextBox("searching")
<input type="hidden" value="@Model.Event.Id" name="id" />
<input type="submit" value=@Localizer["Search"] class="btn btn-primary" />

<p>
    <div class="pagination">
        <pre style="white-space:pre-wrap;">
            @{
                var maxPage = (Model.TotalVolunteers / Model.PagingData.NrOfDocumentsPerPage) + 1;
                if (Model.TotalVolunteers % Model.PagingData.NrOfDocumentsPerPage == 0 && Model.TotalVolunteers != 0)
                {
                    maxPage--;
                }

                if(Model.PagingData.CurrentPage==1)
                {
                    @Html.ActionLink("1", "VolunteerAllocationDisplay", new { page = 1, id = Model.Event.Id, searching = Model.FilterData.NameOfVolunteer}, new { Style = "background-color:lightgray;  color:black; border-radius: 5px;" })
                }
                else
                {
                    @Html.ActionLink("1", "VolunteerAllocationDisplay", new { page = 1, id = Model.Event.Id, searching = Model.FilterData.NameOfVolunteer })
                }
                if(Model.PagingData.CurrentPage >= 5)
                {
                    @Html.ActionLink("<<", "VolunteerAllocationDisplay", new { page = Model.PagingData.CurrentPage - 1, id = Model.Event.Id, searching = Model.FilterData.NameOfVolunteer })
                }
                if(Model.PagingData.CurrentPage > 3)
                {
                    @Html.ActionLink((Model.PagingData.CurrentPage - 2).ToString(), "VolunteerAllocationDisplay", new { page = Model.PagingData.CurrentPage - 2, id = Model.Event.Id, searching = Model.FilterData.NameOfVolunteer })
                }
                if(Model.PagingData.CurrentPage > 2)
                {
                    @Html.ActionLink((Model.PagingData.CurrentPage - 1).ToString(), "VolunteerAllocationDisplay", new { page = Model.PagingData.CurrentPage - 1, id = Model.Event.Id, searching = Model.FilterData.NameOfVolunteer })
                }
                if(Model.PagingData.CurrentPage != 1 && Model.PagingData.CurrentPage != maxPage)
                {
                    @Html.ActionLink(Model.PagingData.CurrentPage.ToString(), "VolunteerAllocationDisplay", new { page = Model.PagingData.CurrentPage, id = Model.Event.Id, searching = Model.FilterData.NameOfVolunteer }, new { Style = "background-color:lightgray;  color:black; border-radius: 5px;" })
                }
                if(Model.PagingData.CurrentPage < maxPage -1)
                {
                    @Html.ActionLink((Model.PagingData.CurrentPage + 1).ToString(), "VolunteerAllocationDisplay", new { page = Model.PagingData.CurrentPage + 1, id = Model.Event.Id, searching = Model.FilterData.NameOfVolunteer })
                }
                if(Model.PagingData.CurrentPage < maxPage -2)
                {
                    @Html.ActionLink((Model.PagingData.CurrentPage + 2).ToString(), "VolunteerAllocationDisplay", new { page = Model.PagingData.CurrentPage + 2, id = Model.Event.Id, searching = Model.FilterData.NameOfVolunteer })
                }
                if(Model.PagingData.CurrentPage < maxPage -3)
                {
                    @Html.ActionLink(">>", "VolunteerAllocationDisplay", new { page = Model.PagingData.CurrentPage + 1, id = Model.Event.Id, searching = Model.FilterData.NameOfVolunteer })
                }
                if(maxPage!=1 && Model.PagingData.CurrentPage == maxPage)
                {
                    @Html.ActionLink(maxPage.ToString(), "VolunteerAllocationDisplay", new { page = maxPage, id = Model.Event.Id, searching = Model.FilterData.NameOfVolunteer }, new { Style = "background-color:lightgray;  color:black; border-radius: 5px;" })
                }
                else if (maxPage != 1)
                {
                    @Html.ActionLink(maxPage.ToString(), "VolunteerAllocationDisplay", new { page = maxPage, id = Model.Event.Id, searching = Model.FilterData.NameOfVolunteer })
                }
            }
            </pre>
    </div>
</p>

}
@if (Model.Messages != "" & Model.Messages != null)
{

    <div>
        <h3 style="color:red">
            @Html.DisplayFor(model => Model.Messages)
        </h3>
    </div>

}

<br />
<form action="/Event/VolunteerAllocation" method="post">
    <table class="table">
        <tr>
            <th>
                @Localizer["Fullname"]:
            </th>
            <th>
                @Localizer["DesiredArea"]:
            </th>
            <th>
                @Localizer["Active"]:
            </th>
            <th>
                @Localizer["HourCount"]:
            </th>
            <th>
                @Localizer["AllocationStatus"]:
            </th>
            <th></th>
        </tr>
        @if (Model.TotalVolunteers == 0)
        {
            <tr>
                <td colspan="3 " style="color:red">
                    @Localizer["There is no Volunteer to Allocate with such name!"]
                </td>
            </tr>
        }
        else
        {
            foreach (var item in Model.Volunteers)
            {

                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Fullname)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DesiredWorkplace)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.InActivity)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.HourCount)
                    </td>
                    @if (item.InActivity)
                    {
                        @if (Model.Event.AllocatedVolunteers.Contains(item.Fullname))
                        {
                            <td>
                                <input type="checkbox" checked="checked" name="CheckedIds" value="@item.Id" />
                                <input type="hidden" name="AllIds" value="@item.Id" />
                            </td>
                            <td>
                                <input type="hidden" name="evId" value="@Model.Event.Id" />
                            </td>
                        }
                        else
                        {
                            <td>
                                <input type="checkbox" name="CheckedIds" value="@item.Id" />
                                <input type="hidden" name="AllIds" value="@item.Id" />
                            </td>
                            <td>
                                <input type="hidden" name="evId" value="@Model.Event.Id" />
                            </td>
                        }
                    }
                    else
                    {
                        <td>
                            <input type="checkbox" disabled="disabled" name="volunteerIds" value="@item.Id" />
                        </td>
                    }
                </tr>
            }
        }
    </table>
    <input type="submit" name="submit" class="btn btn-primary" value=@Localizer["Allocate"] /> |
    <a href="./Index/@Model.Query" class="btn btn-primary">@Localizer["BackToList"]</a>
    <br />
</form>
<br />