@model Finalaplication.Models.Beneficiary

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<<<<<<< Updated upstream
<h4>Beneficiary</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Firstname" class="control-label"></label>
                <input asp-for="Firstname" class="form-control" />
                <span asp-validation-for="Firstname" class="text-danger"></span>
=======
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Volunteer</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Firstname, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Firstname, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Firstname, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Lastname, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Lastname, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Weeklypackage, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Weeklypackage)
                @Html.ValidationMessageFor(model => model.Weeklypackage, "", new { @class = "text-danger" })
>>>>>>> Stashed changes
            </div>
            <div class="form-group">
                <label asp-for="Lastname" class="control-label"></label>
                <input asp-for="Lastname" class="form-control" />
                <span asp-validation-for="Lastname" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Status" class="control-label"></label>
                <input asp-for="Status" class="form-control" />
                <span asp-validation-for="Status" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Weeklypackage" /> @Html.DisplayNameFor(model => model.Weeklypackage)
                </label>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Canteen" /> @Html.DisplayNameFor(model => model.Canteen)
                </label>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="HomeDeliveryDriver" /> @Html.DisplayNameFor(model => model.HomeDeliveryDriver)
                </label>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="HasGDPRAgreement" /> @Html.DisplayNameFor(model => model.HasGDPRAgreement)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="CNP" class="control-label"></label>
                <input asp-for="CNP" class="form-control" />
                <span asp-validation-for="CNP" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ContractPeriode" class="control-label"></label>
                <input asp-for="ContractPeriode" class="form-control" />
                <span asp-validation-for="ContractPeriode" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="NumberOfPortions" class="control-label"></label>
                <input asp-for="NumberOfPortions" class="form-control" />
                <span asp-validation-for="NumberOfPortions" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="LastTimeActiv" class="control-label"></label>
                <input asp-for="LastTimeActiv" class="form-control" />
                <span asp-validation-for="LastTimeActiv" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Coments" class="control-label"></label>
                <input asp-for="Coments" class="form-control" />
                <span asp-validation-for="Coments" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>
<<<<<<< Updated upstream
=======
}
>>>>>>> Stashed changes

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
