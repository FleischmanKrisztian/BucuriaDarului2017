@model IEnumerable<Finalaplication.Models.Beneficiary>

@{
    ViewData["Title"] = "Index";
}
<head>
    <style>

        .pagination a {
            color: black;
            float: left;
            padding: 8px 16px;
            text-decoration: none;
        }

            .pagination a.active {
                background-color: #4CAF50;
                color: white;
            }

            .pagination a:hover:not(.active) {
                background-color: #ddd;
            }
    </style>
</head>
<h1>Beneficiaries</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

@using (Html.BeginForm("Index", "Beneficiary/", FormMethod.Get))
{
    <p>Name:&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;Active:&emsp;&emsp;&emsp;Has Contract:&emsp;&emsp;&emsp;Homeless:&emsp;&emsp;&emsp;Born After:&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;Born Before:</p>
    <p> @Html.TextBox("searching")<input type="submit" value="Search" />&emsp;&emsp; @Html.CheckBox("Active")&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;@Html.CheckBox("HasContract")&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;@Html.CheckBox("Homeless")&emsp;&emsp;&emsp;<input type="date" name="lowerdate">&emsp;<input type="date" name="upperdate" />
    <div class="pagination">
        @{
            int x = 1;
            for (int i = 0; i < ViewBag.counter; i++)
            {
                if (i == 0 || i % 5 == 0)
                {
                    @Html.ActionLink(x.ToString(), "Index", new { page = x, searching = ViewBag.searching, HasContract = ViewBag.hascontract, Active = ViewBag.active, Homeless = ViewBag.Homeless, lowerdate = ViewBag.Lowerdate, upperdate = ViewBag.Upperdate })
                    x++;
                }
            }
        }
        </div>
    </p>
 }

        <table class="table">
            <thead>
                <tr>
                    <th>
                        @Html.ActionLink("Firstname", "Index", new { sortOrder = ViewBag.NameSortParm, searching = ViewBag.searching, HasContract = ViewBag.hascontract, Active = ViewBag.active, Homeless = ViewBag.Homeless, lowerdate = ViewBag.Lowerdate, upperdate = ViewBag.Upperdate })
                    </th>
                    <th>
                        @Html.ActionLink("Lastname", "Index", new { sortOrder = ViewBag.LastnameSort, searching = ViewBag.searching, HasContract = ViewBag.hascontract, Active = ViewBag.active, Homeless = ViewBag.Homeless, lowerdate = ViewBag.Lowerdate, upperdate = ViewBag.Upperdate })
                    </th>
                    <th>
                        @Html.ActionLink("Active", "Index", new { sortOrder = ViewBag.Activesort, searching = ViewBag.searching, HasContract = ViewBag.hascontract, Active = ViewBag.active, Homeless = ViewBag.Homeless, lowerdate = ViewBag.Lowerdate, upperdate = ViewBag.Upperdate })
                    </th>
                    <th>
                        @Html.ActionLink("Gender", "Index", new { sortOrder = ViewBag.Gendersort, searching = ViewBag.searching, HasContract = ViewBag.hascontract, Active = ViewBag.active, Homeless = ViewBag.Homeless, lowerdate = ViewBag.Lowerdate, upperdate = ViewBag.Upperdate })
                    </th>
                    <th>
                        @Html.DisplayName("Weekly package")
                    </th>
                    <th>
                        @Html.DisplayName("Canteen")
                    </th>
                    <th>
                        @Html.ActionLink("Birthdate", "Index", new { sortOrder = ViewBag.DateSortParm, searching = ViewBag.searching, HasContract = ViewBag.hascontract, Active = ViewBag.active, Homeless = ViewBag.Homeless, lowerdate = ViewBag.Lowerdate, upperdate = ViewBag.Upperdate })
                    </th>

                    <th></th>
                </tr>
            </thead>
            <tbody>
                @if (Model.Count() == 0)
                {
                    <tr>
                        <td colspan="3 " style="color:red">
                            There is no Beneficiary with such name!
                        </td>
                    </tr>
                }
                else
                {
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Firstname)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Lastname)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Active)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.PersonalInfo.Gender)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Weeklypackage)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Canteen)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.PersonalInfo.Birthdate)
                            </td>

                            <td>
                                @Html.ActionLink("Edit", "Edit", new { id = item.BeneficiaryID }) |
                                @Html.ActionLink("Details", "Details", new { id = item.BeneficiaryID }) |
                                @Html.ActionLink("Delete", "Delete", new { id = item.BeneficiaryID })
                            </td>
                        </tr>
                    }}
            </tbody>
        </table>

