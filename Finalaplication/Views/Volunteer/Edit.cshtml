@model Finalaplication.Models.Volunteer
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@{
    ViewBag.Title = "Edit";
    string originalsavedvol = ViewBag.originalsavedvol;
    string id = ViewBag.id;
}

<h2>@Localizer["Edit"]</h2>


<form method="post" action="/Volunteer/Edit" enctype="multipart/form-data">
    <input type="hidden" name="Originalsavedvolstring" value="@originalsavedvol" />
    <input type="hidden" name="id" value="@id" />
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="form-horizontal">
        <h4>@Localizer["Volunteer"]</h4>
        <hr />

        <div class="form-group">
            @Localizer["Avatar"]:
            <div class="col-md-10">
                <input type="file" asp-for="Image" onchange="ShowImagePreview(this)" /><br />
                @{
                    if (Model.Image != null)
                    {
                        var imageBase64 = Convert.ToBase64String(Model.Image);
                        var imagesrc = string.Format("data:image/gif;base64,{0}", imageBase64);
                        <img src="@imagesrc" id="image-preview" alt="uploaded image preview" style="width:20%;height:auto" />
                    }
                }
            </div>
        </div>

        <div class="form-group">
            @Localizer["Firstname"]:
            <div class="col-md-10">
                @Html.EditorFor(model => model.Firstname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Firstname, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Localizer["Lastname"]:
            <div class="col-md-10">
                @Html.EditorFor(model => model.Lastname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Localizer["Active"]:
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.InActivity)
                    @Html.ValidationMessageFor(model => model.InActivity, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Localizer["Birthdate"]:
            <div class="col-md-10">
                @Html.EditorFor(model => model.Birthdate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Birthdate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Localizer["District"]:
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address.District, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address.District, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Localizer["City"]:
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address.City, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Localizer["Street"]:
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address.Street, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address.Street, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Localizer["Number"]:
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address.Number, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address.Number, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Localizer["CNP"]:
            <div class="col-md-10">
                @Html.EditorFor(model => model.CNP, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CNP, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Localizer["CISERIE"]:
            <div class="col-md-10">
                @Html.EditorFor(model => model.CIseria, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CIseria, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Localizer["CINR"]:
            <div class="col-md-10">
                @Html.EditorFor(model => model.CINr, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CINr, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Localizer["CIELIBERAT"]:
            <div class="col-md-10">
                @Html.EditorFor(model => model.CIEliberat, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CIEliberat, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Localizer["CIELIBERATOR"]:
            <div class="col-md-10">
                @Html.EditorFor(model => model.CIeliberator, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CIeliberator, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Localizer["Phonenumber"]:
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContactInformation.PhoneNumber, new { htmlAttributes = new { @data_val = "false", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContactInformation.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Localizer["Emailaddrss"]:
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContactInformation.MailAdress, new { htmlAttributes = new { @data_val = "false", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContactInformation.MailAdress, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Localizer["Hascar"]
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Additionalinfo.HasCar)
                    @Html.ValidationMessageFor(model => model.Additionalinfo.HasCar, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Localizer["Hasdrivinglicence"]
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Additionalinfo.HasDrivingLicence)
                    @Html.ValidationMessageFor(model => model.Additionalinfo.HasDrivingLicence, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Localizer["Remarks"]:
            <div class="col-md-10">
                @Html.EditorFor(model => model.Additionalinfo.Remark, new { htmlAttributes = new { @data_val = "false", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Additionalinfo.Remark, "", new { @class = "text-danger" })
            </div>
        </div>

        @using (Html.BeginForm("CheckRadio", "Home", FormMethod.Post))
        {
            <div class="form-group">
                @Localizer["Gender"]:
                <br />
                <div class="col-md-10">
                    @Localizer["Male"] @Html.RadioButtonFor(m => m.Gender, "Male")
                    @Localizer["Female"] @Html.RadioButtonFor(m => m.Gender, "Female")
                </div>
            </div>
        }
        <div class="form-group">
            @Localizer["Desiredarea"]:
            <div class="col-md-10">
                @Html.EditorFor(model => model.Desired_workplace, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Desired_workplace, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Localizer["Fieldofactivity"]:
            <div class="col-md-10">
                @Html.EditorFor(model => model.Field_of_activity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Field_of_activity, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Localizer["Occupation"]:
            <div class="col-md-10">
                @Html.EditorFor(model => model.Occupation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Occupation, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Localizer["Hourcount"]:
            <div class="col-md-10">
                @Html.EditorFor(model => model.HourCount, new { htmlAttributes = new { @data_val = "false", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HourCount, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <input type="submit" value=@Localizer["Save"] class="btn btn-primary" /> |
            <a href=@Url.Action( "Index" ) class="btn btn-primary">@Localizer["BackToList"]</a>
        </div>
    </div>
</form>

<script type="text/javascript">
    function ShowImagePreview(input) {
        if (input.files && input.files[0]) {
            var filerd = new FileReader();
            filerd.onload = function (e) {
                $('#image-preview').attr('src', e.target.result);
            }
            filerd.readAsDataURL(input.files[0]);
        }
    }
</script>