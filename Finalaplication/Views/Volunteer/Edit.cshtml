@model Finalaplication.Models.Volunteer

@{
    ViewBag.Title = "Edit";
    string originalsavedvol = ViewBag.originalsavedvol;
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "Volunteer/", FormMethod.Post))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Volunteer</h4>
    <input type="hidden" name="Originalsavedvol" value="@originalsavedvol" />

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        First name:
        <div class="col-md-10">
            @Html.EditorFor(model => model.Firstname, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Firstname, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        Last name:
        <div class="col-md-10">
            @Html.EditorFor(model => model.Lastname, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        Active:
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.InActivity)
                @Html.ValidationMessageFor(model => model.InActivity, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="form-group">
        Birthdate:
        <div class="col-md-10">
            @Html.EditorFor(model => model.Birthdate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Birthdate, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        Country:
        <div class="col-md-10">
            @Html.EditorFor(model => model.Address.Country, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address.Country, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        City:
        <div class="col-md-10">
            @Html.EditorFor(model => model.Address.City, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address.City, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        Street:
        <div class="col-md-10">
            @Html.EditorFor(model => model.Address.Street, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address.Street, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        Number:
        <div class="col-md-10">
            @Html.EditorFor(model => model.Address.Number, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address.Number, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        Has Contract:
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Contract.HasContract)
                @Html.ValidationMessageFor(model => model.Contract.HasContract, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="form-group">
        Number of registration:
        <div class="col-md-10">
            @Html.EditorFor(model => model.Contract.NumberOfRegistration, new { htmlAttributes = new { @data_val = "false", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Contract.NumberOfRegistration, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        Registration date:
        <div class="col-md-10">
            @Html.EditorFor(model => model.Contract.RegistrationDate, new { htmlAttributes = new { @data_val = "false", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Contract.RegistrationDate, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        Expiration date:
        <div class="col-md-10">
            @Html.EditorFor(model => model.Contract.ExpirationDate, new { htmlAttributes = new { @data_val = "false", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Contract.ExpirationDate, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        Phone number:
        <div class="col-md-10">
            @Html.EditorFor(model => model.ContactInformation.PhoneNumber, new { htmlAttributes = new { @data_val = "false", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ContactInformation.PhoneNumber, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        Email addrss:
        <div class="col-md-10">
            @Html.EditorFor(model => model.ContactInformation.MailAdress, new { htmlAttributes = new { @data_val = "false", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ContactInformation.MailAdress, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        Has car:
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Additionalinfo.HasCar)
                @Html.ValidationMessageFor(model => model.Additionalinfo.HasCar, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="form-group">
        Has driving licence:
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Additionalinfo.HasDrivingLicence)
                @Html.ValidationMessageFor(model => model.Additionalinfo.HasDrivingLicence, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="form-group">
        Remarks:
        <div class="col-md-10">
            @Html.EditorFor(model => model.Additionalinfo.Remark, new { htmlAttributes = new { @data_val = "false", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Additionalinfo.Remark, "", new { @class = "text-danger" })
        </div>
    </div>

    @using (Html.BeginForm("CheckRadio", "Home", FormMethod.Post))
    {
        <div class="form-group">
            Gender:
            <br />
            <div class="col-md-10">
                Male @Html.RadioButtonFor(m => m.Gender, "Male")
                Female @Html.RadioButtonFor(m => m.Gender, "Female")
            </div>
        </div>
    }
    <div class="form-group">
        Desired area:
        <div class="col-md-10">
            @Html.EditorFor(model => model.Desired_workplace, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Desired_workplace, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        Field of activity:
        <div class="col-md-10">
            @Html.EditorFor(model => model.Field_of_activity, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Field_of_activity, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        Occupation:
        <div class="col-md-10">
            @Html.EditorFor(model => model.Occupation, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Occupation, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        Hour count:
        <div class="col-md-10">
            @Html.EditorFor(model => model.HourCount, new { htmlAttributes = new { @data_val = "false", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.HourCount, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <input type="submit" value="Save" class="btn btn-primary" />
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
