<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>